name: Publish

on:
  push:
    # Publish `v*` tags as releases.
    tags:
    - v*
  pull_request:

jobs:
  # Run tests.
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build
      run: go build -v .

    - name: Test
      run: go test -v .

  # Push image to GitHub Container Registry and Docker Hub
  publish:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    # Ensure test job passes before pushing image.
    needs: test
    steps:
    - uses: actions/checkout@v2

    - name: Docker meta
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v1
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.APPLICATION }},ghcr.io/${{ secrets.DOCKER_USERNAME }}/${{ secrets.APPLICATION }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      if: github.event_name != 'pull_request'
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      if: github.event_name != 'pull_request'
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        build-args: VERSION=${{ steps.docker_meta.outputs.version }}
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}